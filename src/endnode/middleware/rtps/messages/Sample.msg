//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 
//
// A generated by a corresponding generator or a reader when passing it to the sink after sample completion.
//
packet Sample {
    // Parameters assigned in the generator
    // Protocol relevant data
    /// The size of the sample (payload)
    int size;
    /// The sequence number of the sample
    int sequenceNumber;
    /// The unique global stream ID
    int globalStreamId;
    
    /// Relevant timestamps
    /// Generation time in the generator
    simtime_t generationTime;
    /// Reception time at the writer
    simtime_t writerArrivalTime;
    /// First fragment send at the writer
    simtime_t writerFirstInjectionTime;
    /// Completely received at the reader
    simtime_t subscriberReceiveTime;

    
    // The reader context and writer context for statistical evaluation
    int readerEntityId;
    int readerParticipantEntityID;
    int writerEntityId;
    int writerParticipantEntityID;

    // Violation indicators
    /// Deadline expired after sample creation (cf. generatedTime)
    bool deadlineViolation;
    /// Lifespan expired after cache insertion (cf. writerArrivalTime)
    bool lifespanExpired;
    /// Deleted before completion due to an exeeded history size on the reader site
    bool historySizeExeeded;
}
