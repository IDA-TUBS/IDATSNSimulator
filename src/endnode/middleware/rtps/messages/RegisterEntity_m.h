//
// Generated file, do not edit! Created by nedtool 5.5 from src/endnode/middleware/rtps/messages/RegisterEntity.msg.
//

#ifndef __REGISTERENTITY_M_H
#define __REGISTERENTITY_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/endnode/middleware/rtps/messages/RegisterEntity.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // Message to register the message at the participant (for dispatching)
 * //
 * message RegisterEntity
 * {
 *     /// The entity ID
 *     int entityId;
 *     /// True if the entity represents a writer else false
 *     bool writer;
 *     /// True if the entity represents a reader else false
 *     bool reader;
 * }
 * </pre>
 */
class RegisterEntity : public ::omnetpp::cMessage
{
  protected:
    int entityId;
    bool writer;
    bool reader;

  private:
    void copy(const RegisterEntity& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RegisterEntity&);

  public:
    RegisterEntity(const char *name=nullptr, short kind=0);
    RegisterEntity(const RegisterEntity& other);
    virtual ~RegisterEntity();
    RegisterEntity& operator=(const RegisterEntity& other);
    virtual RegisterEntity *dup() const override {return new RegisterEntity(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getEntityId() const;
    virtual void setEntityId(int entityId);
    virtual bool getWriter() const;
    virtual void setWriter(bool writer);
    virtual bool getReader() const;
    virtual void setReader(bool reader);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RegisterEntity& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RegisterEntity& obj) {obj.parsimUnpack(b);}


#endif // ifndef __REGISTERENTITY_M_H

